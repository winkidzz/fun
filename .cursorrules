{
  "project": {
    "name": "diagnosis-recommender",
    "type": "spring-boot",
    "javaVersion": "17",
    "description": "Medical diagnosis recommendation system using Elasticsearch and MongoDB"
  },
  "dependencies": {
    "spring-boot": "3.2.3",
    "spring-data-elasticsearch": "5.2.3",
    "spring-data-mongodb": "4.2.3",
    "elasticsearch": "8.12.2",
    "mongodb": "7.0.5"
  },
  "environment": {
    "virtualbox": {
      "vm": {
        "name": "ubuntu24",
        "type": "Ubuntu 64-bit",
        "status": "running",
        "ssh": {
          "user": "godzilla",
          "port": 3322,
          "keyPath": "~/.ssh/vm_key",
          "host": "localhost"
        }
      },
      "portForwarding": {
        "elasticsearch": {
          "hostPort": 9200,
          "guestPort": 9200,
          "protocol": "tcp"
        },
        "mongodb": {
          "hostPort": 27018,
          "guestPort": 27017,
          "protocol": "tcp"
        },
        "docker": {
          "hostPort": 2375,
          "guestPort": 2375,
          "protocol": "tcp"
        },
        "ssh": {
          "hostPort": 3322,
          "guestPort": 22,
          "protocol": "tcp"
        }
      }
    },
    "services": {
      "elasticsearch": {
        "url": "http://localhost:9200",
        "version": "8.12.2",
        "connectionTimeout": "5s",
        "socketTimeout": "3s",
        "docker": {
          "container": "elasticsearch",
          "containerId": "03da37a9fcf3",
          "image": "docker.elastic.co/elasticsearch/elasticsearch:8.12.2",
          "command": "docker run -d --name elasticsearch -p 9200:9200 -e 'discovery.type=single-node' -e 'xpack.security.enabled=false' docker.elastic.co/elasticsearch/elasticsearch:8.12.2",
          "status": "running",
          "ports": {
            "9200": "9200",
            "9300": "9300"
          }
        }
      },
      "mongodb": {
        "host": "localhost",
        "port": 27018,
        "database": "diagnosis_db",
        "docker": {
          "container": "mongodb",
          "containerId": "1fe19300b118",
          "image": "mongo:7.0.5",
          "command": "docker run -d --name mongodb -p 27017:27017 mongo:7.0.5",
          "status": "running",
          "ports": {
            "27017": "27017"
          }
        }
      }
    }
  },
  "configuration": {
    "application": {
      "serverPort": 8080,
      "logging": {
        "elasticsearch": "DEBUG",
        "application": "DEBUG"
      }
    },
    "test": {
      "elasticsearch": {
        "url": "http://localhost:9200",
        "connectionTimeout": "5s",
        "socketTimeout": "3s"
      }
    }
  },
  "projectStructure": {
    "main": {
      "java": "src/main/java/com/medical",
      "resources": "src/main/resources"
    },
    "test": {
      "java": "src/test/java/com/medical",
      "resources": "src/test/resources"
    }
  },
  "build": {
    "tool": "maven",
    "command": "mvn clean install",
    "testCommand": "mvn test"
  },
  "remoteCommands": {
    "checkElasticsearch": "ssh -i ~/.ssh/vm_key -p 3322 godzilla@localhost 'curl -X GET http://localhost:9200'",
    "checkMongoDB": "ssh -i ~/.ssh/vm_key -p 3322 godzilla@localhost 'mongosh --eval \"db.runCommand({ping: 1})\"'",
    "dockerPs": "ssh -i ~/.ssh/vm_key -p 3322 godzilla@localhost 'docker ps'",
    "restartElasticsearch": "ssh -i ~/.ssh/vm_key -p 3322 godzilla@localhost 'docker restart elasticsearch'",
    "restartMongoDB": "ssh -i ~/.ssh/vm_key -p 3322 godzilla@localhost 'docker restart mongodb'",
    "vmTroubleshooting": {
      "checkVMStatus": "& 'C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe' showvminfo ubuntu24 | Select-String -Pattern 'State'",
      "startVM": "& 'C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe' startvm ubuntu24 --type headless",
      "restartVM": "& 'C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe' controlvm ubuntu24 reset",
      "poweroffVM": "& 'C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe' controlvm ubuntu24 poweroff",
      "startServices": "ssh -i ~/.ssh/vm_key -p 3322 godzilla@localhost 'docker start elasticsearch && docker start mongodb'",
      "portConflictResolution": {
        "checkPorts": "netstat -ano | findstr :9200 & netstat -ano | findstr :27017 & netstat -ano | findstr :3322",
        "killProcessByPID": "taskkill /F /PID",
        "stopLocalMongoDB": "net stop MongoDB || sc stop MongoDB",
        "stopLocalElasticsearch": "net stop elasticsearch* || sc stop elasticsearch*",
        "removePortForwarding": "& 'C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe' modifyvm ubuntu24 --natpf1 delete \"elasticsearch\" ; & 'C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe' modifyvm ubuntu24 --natpf1 delete \"mongodb\"",
        "addPortForwarding": "& 'C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe' modifyvm ubuntu24 --natpf1 \"elasticsearch,tcp,,9200,,9200\" ; & 'C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe' modifyvm ubuntu24 --natpf1 \"mongodb,tcp,,27017,,27017\"",
        "troubleshootingSteps": [
          "1. Check if ports are in use with checkPorts",
          "2. Stop any local MongoDB or Elasticsearch services",
          "3. If ports still in use, kill the processes",
          "4. Power off VM with poweroffVM",
          "5. Remove port forwarding rules",
          "6. Add port forwarding rules back",
          "7. Start VM with startVM",
          "8. Wait 30-60 seconds for VM to boot",
          "9. Start services with startServices"
        ]
      }
    }
  }
} 